#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
T·∫°o correlation heatmap v·ªõi m√†u s·∫Øc s√°ng nh∆∞ h√¨nh m·∫´u
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import os

def create_bright_correlation_heatmap():
    """T·∫°o correlation heatmap v·ªõi m√†u s·∫Øc s√°ng"""
    
    print('üåà T·∫†O CORRELATION HEATMAP V·ªöI M√ÄU S·∫ÆC S√ÅNG')
    print('=' * 60)
    
    try:
        # ƒê·ªçc d·ªØ li·ªáu
        if os.path.exists('user_actions_students_576.csv'):
            df = pd.read_csv('user_actions_students_576.csv')
            print(f'‚úÖ ƒê√£ ƒë·ªçc d·ªØ li·ªáu: {len(df)} records')
            
            # T·∫°o features t·ª´ d·ªØ li·ªáu th·ª±c
            user_behavior = df.groupby('user_id').agg({
                'event_type': lambda x: 'purchase' in x.values,
                'product_id': 'nunique',
                'price': ['sum', 'mean'],
                'age': 'first'
            })
            
            user_behavior['total_actions'] = df.groupby('user_id')['event_type'].count()
            user_behavior.columns = ['is_potential', 'unique_products', 'total_spending', 'avg_spending', 'age', 'total_actions']
            
            # T√≠nh correlation
            corr_matrix = user_behavior.corr()
            
        else:
            print('‚ö†Ô∏è  Kh√¥ng t√¨m th·∫•y file d·ªØ li·ªáu, s·ª≠ d·ª•ng d·ªØ li·ªáu m·∫´u')
            # D·ªØ li·ªáu m·∫´u correlation matrix
            features = ['is_potential', 'unique_products', 'total_spending', 'avg_spending', 'age', 'total_actions']
            corr_data = np.array([
                [1.000, 0.234, 0.567, 0.445, 0.123, 0.345],
                [0.234, 1.000, 0.234, 0.123, 0.456, 0.234],
                [0.567, 0.234, 1.000, 0.789, 0.234, 0.567],
                [0.445, 0.123, 0.789, 1.000, 0.123, 0.345],
                [0.123, 0.456, 0.234, 0.123, 1.000, 0.234],
                [0.345, 0.234, 0.567, 0.345, 0.234, 1.000]
            ])
            corr_matrix = pd.DataFrame(corr_data, index=features, columns=features)
        
        print(f'üìä Ma tr·∫≠n correlation: {corr_matrix.shape}')
        print(f'üìà Range: {corr_matrix.min().min():.3f} ƒë·∫øn {corr_matrix.max().max():.3f}')
        
        # 1. T·∫°o heatmap v·ªõi m√†u RdBu_r (gi·ªëng h√¨nh m·∫´u nh·∫•t)
        plt.style.use('default')
        plt.figure(figsize=(12, 10))
        
        # S·ª≠ d·ª•ng seaborn ƒë·ªÉ t·∫°o heatmap ƒë·∫πp
        sns.heatmap(corr_matrix, 
                    annot=True,           # Hi·ªÉn th·ªã gi√° tr·ªã s·ªë
                    cmap='RdBu_r',        # M√†u ƒë·ªè-xanh d∆∞∆°ng (ƒë·∫£o ng∆∞·ª£c)
                    center=0,             # Trung t√¢m t·∫°i 0
                    square=True,          # √î vu√¥ng
                    fmt='.3f',            # Format s·ªë th·∫≠p ph√¢n
                    cbar_kws={'shrink': 0.8, 'aspect': 20},
                    linewidths=0.5,       # ƒê∆∞·ªùng vi·ªÅn m·ªèng
                    linecolor='white',    # ƒê∆∞·ªùng vi·ªÅn tr·∫Øng
                    annot_kws={'fontsize': 11, 'fontweight': 'bold'})
        
        plt.title('Ma tr·∫≠n t∆∞∆°ng quan - M√†u s√°ng (RdBu_r)', 
                 fontsize=18, fontweight='bold', pad=20)
        plt.tight_layout()
        plt.savefig('bright_correlation_heatmap_rdbu.png', 
                   dpi=300, bbox_inches='tight', facecolor='white')
        plt.close()
        print('‚úÖ ƒê√£ t·∫°o: bright_correlation_heatmap_rdbu.png')
        
        # 2. T·∫°o heatmap v·ªõi m√†u coolwarm
        plt.figure(figsize=(12, 10))
        
        sns.heatmap(corr_matrix, 
                    annot=True,
                    cmap='coolwarm',      # M√†u l·∫°nh-n√≥ng
                    center=0,
                    square=True,
                    fmt='.3f',
                    cbar_kws={'shrink': 0.8, 'aspect': 20},
                    linewidths=0.5,
                    linecolor='white',
                    annot_kws={'fontsize': 11, 'fontweight': 'bold'})
        
        plt.title('Ma tr·∫≠n t∆∞∆°ng quan - M√†u l·∫°nh-n√≥ng (coolwarm)', 
                 fontsize=18, fontweight='bold', pad=20)
        plt.tight_layout()
        plt.savefig('bright_correlation_heatmap_coolwarm.png', 
                   dpi=300, bbox_inches='tight', facecolor='white')
        plt.close()
        print('‚úÖ ƒê√£ t·∫°o: bright_correlation_heatmap_coolwarm.png')
        
        # 3. T·∫°o heatmap v·ªõi m√†u RdYlBu_r (m√†u s√°ng nh·∫•t)
        plt.figure(figsize=(12, 10))
        
        sns.heatmap(corr_matrix, 
                    annot=True,
                    cmap='RdYlBu_r',      # M√†u ƒë·ªè-v√†ng-xanh d∆∞∆°ng
                    center=0,
                    square=True,
                    fmt='.3f',
                    cbar_kws={'shrink': 0.8, 'aspect': 20},
                    linewidths=0.5,
                    linecolor='white',
                    annot_kws={'fontsize': 11, 'fontweight': 'bold'})
        
        plt.title('Ma tr·∫≠n t∆∞∆°ng quan - M√†u s√°ng nh·∫•t (RdYlBu_r)', 
                 fontsize=18, fontweight='bold', pad=20)
        plt.tight_layout()
        plt.savefig('bright_correlation_heatmap_rdylbu.png', 
                   dpi=300, bbox_inches='tight', facecolor='white')
        plt.close()
        print('‚úÖ ƒê√£ t·∫°o: bright_correlation_heatmap_rdylbu.png')
        
        # 4. T·∫°o heatmap v·ªõi m√†u Spectral_r
        plt.figure(figsize=(12, 10))
        
        sns.heatmap(corr_matrix, 
                    annot=True,
                    cmap='Spectral_r',    # M√†u quang ph·ªï
                    center=0,
                    square=True,
                    fmt='.3f',
                    cbar_kws={'shrink': 0.8, 'aspect': 20},
                    linewidths=0.5,
                    linecolor='white',
                    annot_kws={'fontsize': 11, 'fontweight': 'bold'})
        
        plt.title('Ma tr·∫≠n t∆∞∆°ng quan - M√†u quang ph·ªï (Spectral_r)', 
                 fontsize=18, fontweight='bold', pad=20)
        plt.tight_layout()
        plt.savefig('bright_correlation_heatmap_spectral.png', 
                   dpi=300, bbox_inches='tight', facecolor='white')
        plt.close()
        print('‚úÖ ƒê√£ t·∫°o: bright_correlation_heatmap_spectral.png')
        
        print('\nüéâ ƒê√É T·∫†O XONG 4 HEATMAP V·ªöI M√ÄU S·∫ÆC S√ÅNG!')
        print('\nüìÅ C√°c file ƒë√£ t·∫°o:')
        print('1. bright_correlation_heatmap_rdbu.png - M√†u ƒë·ªè-xanh d∆∞∆°ng (gi·ªëng h√¨nh m·∫´u nh·∫•t)')
        print('2. bright_correlation_heatmap_coolwarm.png - M√†u l·∫°nh-n√≥ng')
        print('3. bright_correlation_heatmap_rdylbu.png - M√†u ƒë·ªè-v√†ng-xanh d∆∞∆°ng (s√°ng nh·∫•t)')
        print('4. bright_correlation_heatmap_spectral.png - M√†u quang ph·ªï')
        
        print('\nüí° KHUY·∫æN NGH·ªä:')
        print('ü•á Gi·ªëng h√¨nh m·∫´u nh·∫•t: bright_correlation_heatmap_rdbu.png')
        print('ü•à M√†u s√°ng nh·∫•t: bright_correlation_heatmap_rdylbu.png')
        print('ü•â D·ªÖ nh√¨n nh·∫•t: bright_correlation_heatmap_coolwarm.png')
        
        # Hi·ªÉn th·ªã th√¥ng tin correlation
        print('\nüìä CHI TI·∫æT CORRELATION:')
        print(corr_matrix.round(3))
        
        return True
        
    except Exception as e:
        print(f'‚ùå L·ªói: {e}')
        print('\nüí° H∆Ø·ªöNG D·∫™N KH·∫ÆC PH·ª§C:')
        print('1. C√†i ƒë·∫∑t th∆∞ vi·ªán: pip install pandas matplotlib seaborn')
        print('2. ƒê·∫£m b·∫£o file user_actions_students_576.csv t·ªìn t·∫°i')
        print('3. Ch·∫°y l·∫°i script n√†y')
        return False

if __name__ == "__main__":
    create_bright_correlation_heatmap()
